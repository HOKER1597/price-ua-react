{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pushy\\\\Documents\\\\GitHub\\\\price-ua-react\\\\price-ua-react-frontend\\\\src\\\\components\\\\ProductList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useParams, useLocation, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport './ProductList.css';\nimport { categoryNames } from './SearchResults';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProductList({\n  searchTerm\n}) {\n  _s();\n  var _appliedFilters$brand, _appliedFilters$price, _appliedFilters$volum, _appliedFilters$types, _appliedFilters$categ, _appliedFilters$categ2, _appliedFilters$brand2, _appliedFilters$price2, _appliedFilters$volum2, _appliedFilters$types2;\n  const {\n    categoryId\n  } = useParams();\n  const location = useLocation();\n\n  // Отримуємо параметри з URL, враховуючи як 'query', так і 'search'\n  const queryParams = new URLSearchParams(location.search);\n  const initialType = queryParams.get('type') || '';\n  const searchQuery = queryParams.get('query') || queryParams.get('search') || searchTerm || '';\n  const isSearchPage = location.pathname === '/search';\n  console.log('ProductList initialized with:', {\n    categoryId,\n    searchTerm,\n    searchQuery,\n    initialType,\n    isSearchPage,\n    location: location.pathname + location.search\n  });\n\n  // Стан для всіх фільтрів\n  const [filters, setFilters] = useState({\n    brands: [],\n    priceRanges: [],\n    volumes: [],\n    types: [],\n    categories: []\n  });\n\n  // Стан для вибраних фільтрів\n  const [selectedFilters, setSelectedFilters] = useState({\n    brands: [],\n    priceRanges: [],\n    volumes: [],\n    types: initialType ? [initialType] : [],\n    categories: categoryId ? [categoryId] : []\n  });\n\n  // Стан для застосованих фільтрів\n  const [appliedFilters, setAppliedFilters] = useState({\n    brands: [],\n    priceRanges: [],\n    volumes: [],\n    types: initialType ? [initialType] : [],\n    categories: categoryId ? [categoryId] : []\n  });\n\n  // Стан для всіх продуктів (з API)\n  const [allProducts, setAllProducts] = useState([]);\n  // Стан для відфільтрованих продуктів і пагінації\n  const [filteredProducts, setFilteredProducts] = useState([]);\n  const [totalProducts, setTotalProducts] = useState(0);\n  const [previewProductCount, setPreviewProductCount] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const productsPerPage = 24;\n  const [isPaginated, setIsPaginated] = useState(true);\n  const [startPage, setStartPage] = useState(1);\n  const [loadMorePages, setLoadMorePages] = useState(1);\n\n  // Стан для пошуку брендів\n  const [brandSearch, setBrandSearch] = useState('');\n\n  // Стан для кастомного діапазону цін\n  const [customPriceFrom, setCustomPriceFrom] = useState('');\n  const [customPriceTo, setCustomPriceTo] = useState('');\n\n  // Стан для активного фільтру\n  const [activeFilter, setActiveFilter] = useState(null);\n\n  // Стан для неактивних фільтрів\n  const [disabledFilters, setDisabledFilters] = useState({\n    brands: new Set(),\n    priceRanges: new Set(),\n    volumes: new Set(),\n    types: new Set(),\n    categories: new Set()\n  });\n\n  // Стан для \"Більше/Менше\"\n  const [showMore, setShowMore] = useState({\n    brands: false,\n    priceRanges: false,\n    volumes: false,\n    types: false,\n    categories: false\n  });\n\n  // Стан для індикатора завантаження\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Рефи для позиціонування плашки та анімації фільтрів\n  const filterRefs = useRef({});\n  const tagRef = useRef(null);\n  const filterItemsRefs = useRef({});\n\n  // Функція для отримання мінімальної ціни з store_prices\n  const getMinPrice = storePrices => {\n    if (!storePrices || storePrices.length === 0) return 0;\n    return Math.min(...storePrices.map(sp => sp.price));\n  };\n\n  // Функція для попередньої фільтрації (для previewProductCount та disabledFilters)\n  const calculateFilteredProducts = useCallback(tempFilters => {\n    let filtered = [...allProducts];\n\n    // Фільтр за пошуковим запитом\n    if (searchQuery) {\n      filtered = filtered.filter(product => product.name.toLowerCase().includes(searchQuery.toLowerCase()));\n    }\n\n    // Фільтр за категорією\n    if (categoryId && !isSearchPage) {\n      filtered = filtered.filter(product => product.category_id === categoryId);\n    } else if (tempFilters.categories.length > 0 && isSearchPage) {\n      filtered = filtered.filter(product => tempFilters.categories.includes(product.category_name));\n    }\n\n    // Фільтр за брендами\n    if (tempFilters.brands.length > 0) {\n      filtered = filtered.filter(product => tempFilters.brands.includes(product.brand_name));\n    }\n\n    // Фільтр за ціною\n    if (customPriceFrom !== '' && customPriceTo !== '') {\n      const priceFrom = parseFloat(customPriceFrom);\n      const priceTo = parseFloat(customPriceTo);\n      filtered = filtered.filter(product => {\n        const minPrice = getMinPrice(product.store_prices);\n        return minPrice >= priceFrom && minPrice <= priceTo;\n      });\n    } else if (tempFilters.priceRanges.length > 0) {\n      filtered = filtered.filter(product => {\n        const minPrice = getMinPrice(product.store_prices);\n        return tempFilters.priceRanges.some(range => {\n          const [min, max] = range.includes('+') ? [1000, Infinity] : range.split('-').map(Number);\n          return minPrice >= min && (max === Infinity || minPrice <= max);\n        });\n      });\n    }\n\n    // Фільтр за об’ємами\n    if (tempFilters.volumes.length > 0) {\n      filtered = filtered.filter(product => tempFilters.volumes.includes(product.volume));\n    }\n\n    // Фільтр за типами\n    if (tempFilters.types.length > 0) {\n      filtered = filtered.filter(product => tempFilters.types.includes(product.feature_type));\n    }\n    return filtered;\n  }, [allProducts, searchQuery, categoryId, isSearchPage, customPriceFrom, customPriceTo]);\n\n  // Функція для previewProductCount\n  const calculatePreviewProducts = useCallback(() => {\n    const filtered = calculateFilteredProducts(selectedFilters);\n    return filtered.length;\n  }, [calculateFilteredProducts, selectedFilters]);\n\n  // Функція для оновлення неактивних фільтрів\n  const updateDisabledFilters = useCallback(() => {\n    const newDisabledFilters = {\n      brands: new Set(),\n      priceRanges: new Set(),\n      volumes: new Set(),\n      types: new Set(),\n      categories: new Set()\n    };\n\n    // Базові фільтри: усі вибрані фільтри, крім поточного типу\n    const baseFilters = {\n      brands: [...selectedFilters.brands],\n      priceRanges: [...selectedFilters.priceRanges],\n      volumes: [...selectedFilters.volumes],\n      types: [...selectedFilters.types],\n      categories: [...selectedFilters.categories]\n    };\n\n    // Перевірка кожного бренду\n    filters.brands.forEach(brand => {\n      const tempFilters = {\n        ...baseFilters,\n        brands: [brand],\n        priceRanges: baseFilters.priceRanges,\n        volumes: baseFilters.volumes,\n        types: baseFilters.types,\n        categories: baseFilters.categories\n      };\n      const filtered = calculateFilteredProducts(tempFilters);\n      if (filtered.length === 0) {\n        newDisabledFilters.brands.add(brand);\n      }\n    });\n\n    // Перевірка кожного цінового діапазону\n    filters.priceRanges.forEach(range => {\n      const tempFilters = {\n        ...baseFilters,\n        brands: baseFilters.brands,\n        priceRanges: [range.label],\n        volumes: baseFilters.volumes,\n        types: baseFilters.types,\n        categories: baseFilters.categories\n      };\n      const filtered = calculateFilteredProducts(tempFilters);\n      if (filtered.length === 0) {\n        newDisabledFilters.priceRanges.add(range.label);\n      }\n    });\n\n    // Перевірка кожного об’єму\n    filters.volumes.forEach(volume => {\n      const tempFilters = {\n        ...baseFilters,\n        brands: baseFilters.brands,\n        priceRanges: baseFilters.priceRanges,\n        volumes: [volume],\n        types: baseFilters.types,\n        categories: baseFilters.categories\n      };\n      const filtered = calculateFilteredProducts(tempFilters);\n      if (filtered.length === 0) {\n        newDisabledFilters.volumes.add(volume);\n      }\n    });\n\n    // Перевірка кожного типу\n    filters.types.forEach(type => {\n      const tempFilters = {\n        ...baseFilters,\n        brands: baseFilters.brands,\n        priceRanges: baseFilters.priceRanges,\n        volumes: baseFilters.volumes,\n        types: [type],\n        categories: baseFilters.categories\n      };\n      const filtered = calculateFilteredProducts(tempFilters);\n      if (filtered.length === 0) {\n        newDisabledFilters.types.add(type);\n      }\n    });\n\n    // Перевірка кожної категорії (для /search)\n    if (isSearchPage) {\n      filters.categories.forEach(category => {\n        const tempFilters = {\n          ...baseFilters,\n          brands: baseFilters.brands,\n          priceRanges: baseFilters.priceRanges,\n          volumes: baseFilters.volumes,\n          types: baseFilters.types,\n          categories: [category]\n        };\n        const filtered = calculateFilteredProducts(tempFilters);\n        if (filtered.length === 0) {\n          newDisabledFilters.categories.add(category);\n        }\n      });\n    }\n    setDisabledFilters(newDisabledFilters);\n  }, [filters, selectedFilters, calculateFilteredProducts, isSearchPage]);\n\n  // Завантаження всіх продуктів із API\n  useEffect(() => {\n    const fetchProducts = async () => {\n      setIsLoading(true); // Починаємо завантаження\n      try {\n        // Логування параметрів запиту\n        const requestParams = {\n          search: searchQuery || undefined,\n          category: categoryId && !isSearchPage ? categoryId : undefined,\n          limit: 1000\n        };\n        console.log('Fetching products with params:', requestParams);\n\n        // Завантажуємо всі продукти з урахуванням пошукового запиту та категорії\n        const response = await axios.get('https://price-ua-react-backend.onrender.com/products', {\n          params: requestParams\n        });\n\n        // Логування отриманих даних\n        console.log('API response:', {\n          productCount: response.data.products.length,\n          products: response.data.products.map(p => ({\n            id: p.id,\n            name: p.name,\n            category_id: p.category_id,\n            category_name: p.category_name\n          }))\n        });\n        let productsData = response.data.products || [];\n\n        // Ініціалізація фільтрів на основі отриманих продуктів\n        const brandCounts = {};\n        const typeCounts = {};\n        const categoryCounts = {};\n        const allVolumes = new Set();\n        const priceBuckets = new Set();\n        productsData.forEach(product => {\n          const brand = product.brand_name;\n          const type = product.feature_type;\n          const category = product.category_name;\n          const volume = product.volume;\n          const minPrice = getMinPrice(product.store_prices);\n          brandCounts[brand] = (brandCounts[brand] || 0) + 1;\n          if (type) typeCounts[type] = (typeCounts[type] || 0) + 1;\n          categoryCounts[category] = (categoryCounts[category] || 0) + 1;\n          if (volume) allVolumes.add(volume);\n          if (minPrice > 0) {\n            if (minPrice <= 100) priceBuckets.add('0-100');else if (minPrice <= 200) priceBuckets.add('100-200');else if (minPrice <= 300) priceBuckets.add('200-300');else if (minPrice <= 400) priceBuckets.add('300-400');else if (minPrice <= 500) priceBuckets.add('400-500');else if (minPrice <= 600) priceBuckets.add('500-600');else if (minPrice <= 700) priceBuckets.add('600-700');else if (minPrice <= 800) priceBuckets.add('700-800');else if (minPrice <= 900) priceBuckets.add('800-900');else if (minPrice <= 1000) priceBuckets.add('900-1000');else priceBuckets.add('1000+');\n          }\n        });\n        const allBrands = [...new Set(productsData.map(p => p.brand_name))].sort((a, b) => (brandCounts[b] || 0) - (brandCounts[a] || 0));\n        const allPriceRanges = [{\n          label: '0-100',\n          min: 0,\n          max: 100\n        }, {\n          label: '100-200',\n          min: 100,\n          max: 200\n        }, {\n          label: '200-300',\n          min: 200,\n          max: 300\n        }, {\n          label: '300-400',\n          min: 300,\n          max: 400\n        }, {\n          label: '400-500',\n          min: 400,\n          max: 500\n        }, {\n          label: '500-600',\n          min: 500,\n          max: 600\n        }, {\n          label: '600-700',\n          min: 600,\n          max: 700\n        }, {\n          label: '700-800',\n          min: 700,\n          max: 800\n        }, {\n          label: '800-900',\n          min: 800,\n          max: 900\n        }, {\n          label: '900-1000',\n          min: 900,\n          max: 1000\n        }, {\n          label: '1000+',\n          min: 1000,\n          max: Infinity\n        }].filter(range => priceBuckets.has(range.label));\n        const allVolumesSorted = [...allVolumes].sort((a, b) => {\n          const numA = parseFloat(a.replace(/[^0-9.]/g, '')) || 0;\n          const numB = parseFloat(b.replace(/[^0-9.]/g, '')) || 0;\n          return numA - numB;\n        });\n        const allTypes = [...new Set(productsData.map(p => p.feature_type).filter(Boolean))].sort((a, b) => (typeCounts[b] || 0) - (typeCounts[a] || 0));\n        const allCategories = isSearchPage ? [...new Set(productsData.map(p => p.category_name))].sort((a, b) => (categoryCounts[b] || 0) - (categoryCounts[a] || 0)) : [categoryId].filter(Boolean);\n        setFilters({\n          brands: allBrands,\n          priceRanges: allPriceRanges,\n          volumes: allVolumesSorted,\n          types: allTypes,\n          categories: allCategories\n        });\n        setAllProducts(productsData);\n        setFilteredProducts(productsData); // Спочатку встановлюємо, але useEffect нижче оновить\n        setTotalProducts(productsData.length);\n        setPreviewProductCount(productsData.length);\n        setCurrentPage(1);\n        setStartPage(1);\n        setLoadMorePages(1);\n        setIsPaginated(true);\n\n        // Скидання фільтрів\n        setSelectedFilters({\n          brands: [],\n          priceRanges: [],\n          volumes: [],\n          types: initialType ? [initialType] : [],\n          categories: categoryId ? [categoryId] : []\n        });\n        setAppliedFilters({\n          brands: [],\n          priceRanges: [],\n          volumes: [],\n          types: initialType ? [initialType] : [],\n          categories: categoryId ? [categoryId] : []\n        });\n        setBrandSearch('');\n        setCustomPriceFrom('');\n        setCustomPriceTo('');\n        setDisabledFilters({\n          brands: new Set(),\n          priceRanges: new Set(),\n          volumes: new Set(),\n          types: new Set(),\n          categories: new Set()\n        });\n\n        // Автоматично вибираємо чекбокс типу\n        if (initialType) {\n          setTimeout(() => {\n            const typeCheckbox = document.querySelector(`input[name=\"type\"][value=\"${initialType}\"]`);\n            if (typeCheckbox) typeCheckbox.checked = true;\n          }, 0);\n        }\n      } catch (error) {\n        console.error('Помилка завантаження продуктів:', error);\n        alert('Не вдалося завантажити продукти. Перевірте підключення до сервера.');\n        setAllProducts([]);\n        setFilteredProducts([]);\n        setTotalProducts(0);\n        setPreviewProductCount(0);\n      } finally {\n        setIsLoading(false); // Завершуємо завантаження\n      }\n    };\n    fetchProducts();\n  }, [categoryId, searchQuery, initialType, isSearchPage]);\n\n  // Оновлення previewProductCount та disabledFilters при зміні selectedFilters\n  useEffect(() => {\n    if (!isLoading) {\n      setPreviewProductCount(calculatePreviewProducts());\n      updateDisabledFilters();\n    }\n  }, [selectedFilters, customPriceFrom, customPriceTo, searchQuery, categoryId, isSearchPage, allProducts, isLoading, calculatePreviewProducts, updateDisabledFilters]);\n\n  // Клієнтська фільтрація при зміні застосованих фільтрів\n  useEffect(() => {\n    if (!isLoading && allProducts.length > 0) {\n      console.log('Starting client-side filtering:', {\n        allProductsCount: allProducts.length,\n        searchQuery,\n        categoryId,\n        isSearchPage,\n        appliedFilters,\n        customPriceFrom,\n        customPriceTo\n      });\n      let filtered = [...allProducts];\n\n      // Фільтр за пошуковим запитом\n      if (searchQuery) {\n        console.log('Applying searchQuery filter:', {\n          searchQuery\n        });\n        filtered = filtered.filter(product => {\n          const matches = product.name.toLowerCase().includes(searchQuery.toLowerCase());\n          if (!matches) {\n            console.log(`Excluding product: ${product.name} (does not match \"${searchQuery}\")`);\n          }\n          return matches;\n        });\n        console.log('After searchQuery filter:', {\n          count: filtered.length,\n          products: filtered.map(p => p.name)\n        });\n      }\n\n      // Фільтр за категорією\n      if (categoryId && !isSearchPage) {\n        console.log('Applying categoryId filter:', {\n          categoryId\n        });\n        filtered = filtered.filter(product => {\n          const matches = product.category_id === categoryId;\n          if (!matches) {\n            console.log(`Excluding product: ${product.name} (category_id ${product.category_id} does not match \"${categoryId}\")`);\n          }\n          return matches;\n        });\n        console.log('After categoryId filter:', {\n          count: filtered.length,\n          products: filtered.map(p => p.name)\n        });\n      } else if (appliedFilters.categories.length > 0 && isSearchPage) {\n        console.log('Applying categories filter:', {\n          categories: appliedFilters.categories\n        });\n        filtered = filtered.filter(product => {\n          const matches = appliedFilters.categories.includes(product.category_name);\n          if (!matches) {\n            console.log(`Excluding product: ${product.name} (category_name ${product.category_name} not in ${appliedFilters.categories})`);\n          }\n          return matches;\n        });\n        console.log('After categories filter:', {\n          count: filtered.length,\n          products: filtered.map(p => p.name)\n        });\n      }\n\n      // Фільтр за брендами\n      if (appliedFilters.brands.length > 0) {\n        console.log('Applying brands filter:', {\n          brands: appliedFilters.brands\n        });\n        filtered = filtered.filter(product => {\n          const matches = appliedFilters.brands.includes(product.brand_name);\n          if (!matches) {\n            console.log(`Excluding product: ${product.name} (brand ${product.brand_name} not in ${appliedFilters.brands})`);\n          }\n          return matches;\n        });\n        console.log('After brands filter:', {\n          count: filtered.length,\n          products: filtered.map(p => p.name)\n        });\n      }\n\n      // Фільтр за ціною\n      if (customPriceFrom !== '' && customPriceTo !== '') {\n        const priceFrom = parseFloat(customPriceFrom);\n        const priceTo = parseFloat(customPriceTo);\n        console.log('Applying custom price filter:', {\n          priceFrom,\n          priceTo\n        });\n        filtered = filtered.filter(product => {\n          const minPrice = getMinPrice(product.store_prices);\n          const matches = minPrice >= priceFrom && minPrice <= priceTo;\n          if (!matches) {\n            console.log(`Excluding product: ${product.name} (price ${minPrice} not in range ${priceFrom}-${priceTo})`);\n          }\n          return matches;\n        });\n        console.log('After custom price filter:', {\n          count: filtered.length,\n          products: filtered.map(p => p.name)\n        });\n      } else if (appliedFilters.priceRanges.length > 0) {\n        console.log('Applying priceRanges filter:', {\n          priceRanges: appliedFilters.priceRanges\n        });\n        filtered = filtered.filter(product => {\n          const minPrice = getMinPrice(product.store_prices);\n          const matches = appliedFilters.priceRanges.some(range => {\n            const [min, max] = range.includes('+') ? [1000, Infinity] : range.split('-').map(Number);\n            return minPrice >= min && (max === Infinity || minPrice <= max);\n          });\n          if (!matches) {\n            console.log(`Excluding product: ${product.name} (price ${minPrice} not in ranges ${appliedFilters.priceRanges})`);\n          }\n          return matches;\n        });\n        console.log('After priceRanges filter:', {\n          count: filtered.length,\n          products: filtered.map(p => p.name)\n        });\n      }\n\n      // Фільтр за об’ємами\n      if (appliedFilters.volumes.length > 0) {\n        console.log('Applying volumes filter:', {\n          volumes: appliedFilters.volumes\n        });\n        filtered = filtered.filter(product => {\n          const matches = appliedFilters.volumes.includes(product.volume);\n          if (!matches) {\n            console.log(`Excluding product: ${product.name} (volume ${product.volume} not in ${appliedFilters.volumes})`);\n          }\n          return matches;\n        });\n        console.log('After volumes filter:', {\n          count: filtered.length,\n          products: filtered.map(p => p.name)\n        });\n      }\n\n      // Фільтр за типами\n      if (appliedFilters.types.length > 0) {\n        console.log('Applying types filter:', {\n          types: appliedFilters.types\n        });\n        filtered = filtered.filter(product => {\n          const matches = appliedFilters.types.includes(product.feature_type);\n          if (!matches) {\n            console.log(`Excluding product: ${product.name} (type ${product.feature_type} not in ${appliedFilters.types})`);\n          }\n          return matches;\n        });\n        console.log('After types filter:', {\n          count: filtered.length,\n          products: filtered.map(p => p.name)\n        });\n      }\n\n      // Логування фінального результату\n      console.log('Final filtered products:', {\n        count: filtered.length,\n        products: filtered.map(p => ({\n          id: p.id,\n          name: p.name,\n          category_id: p.category_id,\n          category_name: p.category_name\n        }))\n      });\n      setFilteredProducts(filtered);\n      setTotalProducts(filtered.length);\n    }\n  }, [allProducts, appliedFilters, customPriceFrom, customPriceTo, searchQuery, categoryId, isSearchPage, isLoading]);\n\n  // Обробка вибору фільтру\n  const handleFilterChange = (filterType, value) => {\n    setSelectedFilters(prev => {\n      const currentValues = prev[filterType] || [];\n      let updatedValues;\n      if (currentValues.includes(value)) {\n        updatedValues = currentValues.filter(v => v !== value);\n      } else {\n        updatedValues = [...currentValues, value];\n      }\n      const updatedFilters = {\n        ...prev,\n        [filterType]: updatedValues\n      };\n      if (filterType === 'priceRanges') {\n        setCustomPriceFrom('');\n        setCustomPriceTo('');\n      }\n      return updatedFilters;\n    });\n    setActiveFilter({\n      type: filterType,\n      value\n    });\n  };\n\n  // Видалення одного фільтру\n  const removeFilter = (filterType, value) => {\n    setSelectedFilters(prev => {\n      const updatedValues = (prev[filterType] || []).filter(v => v !== value);\n      const updatedFilters = {\n        ...prev,\n        [filterType]: updatedValues\n      };\n      setAppliedFilters({\n        ...prev,\n        [filterType]: updatedValues\n      });\n      return updatedFilters;\n    });\n  };\n\n  // Скидання всіх фільтрів\n  const resetAllFilters = () => {\n    const emptyFilters = {\n      brands: [],\n      priceRanges: [],\n      volumes: [],\n      types: [],\n      categories: []\n    };\n    setSelectedFilters(emptyFilters);\n    setAppliedFilters(emptyFilters);\n    setBrandSearch('');\n    setCustomPriceFrom('');\n    setCustomPriceTo('');\n    setDisabledFilters({\n      brands: new Set(),\n      priceRanges: new Set(),\n      volumes: new Set(),\n      types: new Set(),\n      categories: new Set()\n    });\n    setCurrentPage(1);\n    setStartPage(1);\n    setLoadMorePages(1);\n    setIsPaginated(true);\n  };\n\n  // Застосування фільтрів\n  const applyFilters = () => {\n    setAppliedFilters({\n      ...selectedFilters\n    });\n    setCurrentPage(1);\n    setStartPage(1);\n    setLoadMorePages(1);\n    setIsPaginated(true);\n    setActiveFilter(null);\n  };\n\n  // Перемикання \"Більше\"/\"Менше\"\n  const toggleShowMore = filterType => {\n    setShowMore(prev => ({\n      ...prev,\n      [filterType]: !prev[filterType]\n    }));\n  };\n\n  // Обробка пошуку брендів\n  const handleBrandSearch = e => {\n    setBrandSearch(e.target.value);\n  };\n\n  // Обробка кастомного діапазону цін\n  const handleCustomPriceChange = (field, value) => {\n    const numValue = value.replace(/[^0-9]/g, '');\n    if (field === 'from') {\n      setCustomPriceFrom(numValue);\n    } else {\n      setCustomPriceTo(numValue);\n    }\n    if (numValue !== '') {\n      setSelectedFilters(prev => ({\n        ...prev,\n        priceRanges: []\n      }));\n      setAppliedFilters(prev => ({\n        ...prev,\n        priceRanges: []\n      }));\n    }\n  };\n\n  // Обмеження кількості елементів для фільтрів\n  const getVisibleItems = useCallback((items, filterType) => {\n    if (!items) return [];\n    let filteredItems = items;\n    if (filterType === 'brands') {\n      filteredItems = items.filter(brand => brand.toLowerCase().includes(brandSearch.toLowerCase()));\n      const topItems = filteredItems.slice(0, 12); // Top 12 brands (by count)\n      const remainingItems = filteredItems.slice(12); // Remaining brands\n      if (showMore.brands || filteredItems.length <= 12) {\n        // Keep top 12 in original order, sort remaining alphabetically\n        return [...topItems, ...remainingItems.sort((a, b) => a.localeCompare(b))];\n      }\n      return topItems;\n    }\n    if (filterType === 'types') {\n      const topItems = filteredItems.slice(0, 6); // Top 6 types (by count)\n      const remainingItems = filteredItems.slice(6); // Remaining types\n      if (showMore.types || filteredItems.length <= 6) {\n        // Keep top 6 in original order, sort remaining alphabetically\n        return [...topItems, ...remainingItems.sort((a, b) => a.localeCompare(b))];\n      }\n      return topItems;\n    }\n    if (filterType === 'categories') {\n      if (showMore.categories || items.length <= 6) {\n        return [...items].sort((a, b) => a.localeCompare(b));\n      }\n      return items.slice(0, 6);\n    }\n    if (showMore[filterType] || items.length <= 12) {\n      return items;\n    }\n    return items.slice(0, 12);\n  }, [brandSearch, showMore]);\n\n  // Модифікація назви продукту\n  const getProductName = product => {\n    return `${product.name} (${product.volume || 'Об’єм не вказано'})`;\n  };\n\n  // Пагінація\n  const totalPages = Math.ceil(totalProducts / productsPerPage);\n  const handlePageChange = page => {\n    setCurrentPage(page);\n    setStartPage(page);\n    setLoadMorePages(1);\n    setIsPaginated(true);\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  };\n  const handleLoadMore = () => {\n    setCurrentPage(prev => prev + 1);\n    setLoadMorePages(prev => prev + 1);\n    setIsPaginated(false);\n  };\n  const pageNumbers = [];\n  for (let i = 1; i <= totalPages; i++) {\n    pageNumbers.push(i);\n  }\n  const totalAppliedFilters = (((_appliedFilters$brand = appliedFilters.brands) === null || _appliedFilters$brand === void 0 ? void 0 : _appliedFilters$brand.length) || 0) + (((_appliedFilters$price = appliedFilters.priceRanges) === null || _appliedFilters$price === void 0 ? void 0 : _appliedFilters$price.length) || 0) + (((_appliedFilters$volum = appliedFilters.volumes) === null || _appliedFilters$volum === void 0 ? void 0 : _appliedFilters$volum.length) || 0) + (((_appliedFilters$types = appliedFilters.types) === null || _appliedFilters$types === void 0 ? void 0 : _appliedFilters$types.length) || 0) + (isSearchPage ? ((_appliedFilters$categ = appliedFilters.categories) === null || _appliedFilters$categ === void 0 ? void 0 : _appliedFilters$categ.length) || 0 : 0) + (customPriceFrom !== '' && customPriceTo !== '' ? 1 : 0);\n\n  // Оновлення висоти контейнерів фільтрів при зміні showMore або brandSearch\n  useEffect(() => {\n    Object.keys(showMore).forEach(filterType => {\n      const container = filterItemsRefs.current[filterType];\n      if (container) {\n        const items = container.querySelector('.filter-items');\n        if (items) {\n          const visibleItems = getVisibleItems(filters[filterType], filterType);\n          const maxVisible = filterType === 'brands' || filterType === 'priceRanges' || filterType === 'volumes' ? 12 : 6;\n          const isExpanded = showMore[filterType] || visibleItems.length <= maxVisible;\n          // Обчислюємо висоту для згорнутого стану\n          const collapsedHeight = visibleItems.length > maxVisible ? items.scrollHeight * (maxVisible / filters[filterType].length) : items.scrollHeight;\n          // Встановлюємо max-height\n          container.style.maxHeight = isExpanded ? `${items.scrollHeight}px` : `${collapsedHeight}px`;\n        }\n      }\n    });\n  }, [showMore, filters, brandSearch, getVisibleItems]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0422\\u043E\\u0432\\u0430\\u0440\\u0438 \\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0456\\u0457\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 831,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0417\\u0430\\u0432\\u0430\\u043D\\u0442\\u0430\\u0436\\u0435\\u043D\\u043D\\u044F...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 836,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 834,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 833,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-list-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `filters ${!isLoading ? 'loaded' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filters-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\u0424\\u0456\\u043B\\u044C\\u0442\\u0440\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 844,\n            columnNumber: 13\n          }, this), totalAppliedFilters > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selected-filters\",\n            children: [isSearchPage && ((_appliedFilters$categ2 = appliedFilters.categories) === null || _appliedFilters$categ2 === void 0 ? void 0 : _appliedFilters$categ2.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selected-filter-tag\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: categoryNames[category] || category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 850,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => removeFilter('categories', category),\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 851,\n                columnNumber: 23\n              }, this)]\n            }, `category-${category}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 849,\n              columnNumber: 21\n            }, this))), (_appliedFilters$brand2 = appliedFilters.brands) === null || _appliedFilters$brand2 === void 0 ? void 0 : _appliedFilters$brand2.map(brand => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selected-filter-tag\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: brand\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 858,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => removeFilter('brands', brand),\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 859,\n                columnNumber: 21\n              }, this)]\n            }, `brand-${brand}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 857,\n              columnNumber: 19\n            }, this)), customPriceFrom !== '' && customPriceTo !== '' ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selected-filter-tag\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [customPriceFrom, \"-\", customPriceTo, \" \\u0433\\u0440\\u043D\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 864,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  setCustomPriceFrom('');\n                  setCustomPriceTo('');\n                  applyFilters();\n                },\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 867,\n                columnNumber: 21\n              }, this)]\n            }, \"custom-price\", true, {\n              fileName: _jsxFileName,\n              lineNumber: 863,\n              columnNumber: 19\n            }, this) : (_appliedFilters$price2 = appliedFilters.priceRanges) === null || _appliedFilters$price2 === void 0 ? void 0 : _appliedFilters$price2.map(range => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selected-filter-tag\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: range\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 880,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => removeFilter('priceRanges', range),\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 881,\n                columnNumber: 23\n              }, this)]\n            }, `price-${range}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 879,\n              columnNumber: 21\n            }, this)), (_appliedFilters$volum2 = appliedFilters.volumes) === null || _appliedFilters$volum2 === void 0 ? void 0 : _appliedFilters$volum2.map(volume => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selected-filter-tag\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: volume\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 889,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => removeFilter('volumes', volume),\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 890,\n                columnNumber: 21\n              }, this)]\n            }, `volume-${volume}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 888,\n              columnNumber: 19\n            }, this)), (_appliedFilters$types2 = appliedFilters.types) === null || _appliedFilters$types2 === void 0 ? void 0 : _appliedFilters$types2.map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selected-filter-tag\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 895,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => removeFilter('types', type),\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 896,\n                columnNumber: 21\n              }, this)]\n            }, `type-${type}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 894,\n              columnNumber: 19\n            }, this)), totalAppliedFilters > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"reset-all-filters\",\n              onClick: resetAllFilters,\n              children: \"\\u0421\\u043A\\u0438\\u043D\\u0443\\u0442\\u0438 \\u0432\\u0441\\u0456\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 900,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 846,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 843,\n          columnNumber: 11\n        }, this), isSearchPage && searchQuery && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0456\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 911,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-items-container\",\n            ref: el => filterItemsRefs.current['categories'] = el,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"filter-items filter-items-single-column\",\n              children: getVisibleItems(filters.categories, 'categories').map((category, index) => {\n                var _selectedFilters$cate;\n                const isDisabled = disabledFilters.categories.has(category);\n                return /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: isDisabled ? 'disabled' : '',\n                  ref: el => filterRefs.current[`categories-${category}`] = el,\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    name: \"category\",\n                    value: category,\n                    checked: ((_selectedFilters$cate = selectedFilters.categories) === null || _selectedFilters$cate === void 0 ? void 0 : _selectedFilters$cate.includes(category)) || false,\n                    onChange: () => handleFilterChange('categories', category),\n                    disabled: isDisabled\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 926,\n                    columnNumber: 27\n                  }, this), categoryNames[category] || category]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 921,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 916,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 912,\n            columnNumber: 15\n          }, this), filters.categories.length > 6 && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"show-more-btn\",\n            onClick: () => toggleShowMore('categories'),\n            children: showMore.categories ? 'Менше ↑' : 'Більше ↓'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 944,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 910,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\u0411\\u0440\\u0435\\u043D\\u0434\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 956,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"brand-search-input\",\n            placeholder: \"\\u041F\\u043E\\u0448\\u0443\\u043A \\u0431\\u0440\\u0435\\u043D\\u0434\\u0443...\",\n            value: brandSearch,\n            onChange: handleBrandSearch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 957,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-items-container\",\n            ref: el => filterItemsRefs.current['brands'] = el,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"filter-items\",\n              children: getVisibleItems(filters.brands, 'brands').map((brand, index) => {\n                var _selectedFilters$bran;\n                const isDisabled = disabledFilters.brands.has(brand);\n                return /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: `${brand.length > 13 ? 'span-two-columns' : ''} ${isDisabled ? 'disabled' : ''}`,\n                  ref: el => filterRefs.current[`brands-${brand}`] = el,\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    name: \"brand\",\n                    value: brand,\n                    checked: ((_selectedFilters$bran = selectedFilters.brands) === null || _selectedFilters$bran === void 0 ? void 0 : _selectedFilters$bran.includes(brand)) || false,\n                    onChange: () => handleFilterChange('brands', brand),\n                    disabled: isDisabled\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 979,\n                    columnNumber: 23\n                  }, this), brand]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 972,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 968,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 964,\n            columnNumber: 13\n          }, this), filters.brands.length > 12 && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"show-more-btn\",\n            onClick: () => toggleShowMore('brands'),\n            children: showMore.brands ? 'Менше ↑' : 'Більше ↓'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 994,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 955,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\u0426\\u0456\\u043D\\u0430 (\\u0433\\u0440\\u043D)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1005,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-price-inputs\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"\\u0412\\u0456\\u0434\",\n              value: customPriceFrom,\n              onChange: e => handleCustomPriceChange('from', e.target.value),\n              className: \"price-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1007,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"\\u0414\\u043E\",\n              value: customPriceTo,\n              onChange: e => handleCustomPriceChange('to', e.target.value),\n              className: \"price-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1014,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1006,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-items-container\",\n            ref: el => filterItemsRefs.current['priceRanges'] = el,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"filter-items\",\n              children: getVisibleItems(filters.priceRanges, 'priceRanges').map((range, index) => {\n                var _selectedFilters$pric;\n                const isDisabled = disabledFilters.priceRanges.has(range.label);\n                return /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: isDisabled ? 'disabled' : '',\n                  ref: el => filterRefs.current[`priceRanges-${range.label}`] = el,\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    name: \"priceRange\",\n                    value: range.label,\n                    checked: ((_selectedFilters$pric = selectedFilters.priceRanges) === null || _selectedFilters$pric === void 0 ? void 0 : _selectedFilters$pric.includes(range.label)) || false,\n                    onChange: () => handleFilterChange('priceRanges', range.label),\n                    disabled: isDisabled\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1038,\n                    columnNumber: 25\n                  }, this), range.label]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1031,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1026,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1022,\n            columnNumber: 13\n          }, this), filters.priceRanges.length > 12 && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"show-more-btn\",\n            onClick: () => toggleShowMore('priceRanges'),\n            children: showMore.priceRanges ? 'Менше ↑' : 'Більше ↓'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1058,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1004,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\u041E\\u0431\\u2019\\u0454\\u043C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1069,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-items-container\",\n            ref: el => filterItemsRefs.current['volumes'] = el,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"filter-items\",\n              children: getVisibleItems(filters.volumes, 'volumes').map((volume, index) => {\n                var _selectedFilters$volu;\n                const isDisabled = disabledFilters.volumes.has(volume);\n                return /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: isDisabled ? 'disabled' : '',\n                  ref: el => filterRefs.current[`volumes-${volume}`] = el,\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    name: \"volume\",\n                    value: volume,\n                    checked: ((_selectedFilters$volu = selectedFilters.volumes) === null || _selectedFilters$volu === void 0 ? void 0 : _selectedFilters$volu.includes(volume)) || false,\n                    onChange: () => handleFilterChange('volumes', volume),\n                    disabled: isDisabled\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1083,\n                    columnNumber: 23\n                  }, this), volume]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1078,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1074,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1070,\n            columnNumber: 13\n          }, this), filters.volumes.length > 12 && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"show-more-btn\",\n            onClick: () => toggleShowMore('volumes'),\n            children: showMore.volumes ? 'Менше ↑' : 'Більше ↓'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1098,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1068,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\u0422\\u0438\\u043F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-items-container\",\n            ref: el => filterItemsRefs.current['types'] = el,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"filter-items filter-items-single-column\",\n              children: getVisibleItems(filters.types, 'types').map((type, index) => {\n                var _selectedFilters$type;\n                const isDisabled = disabledFilters.types.has(type);\n                return /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: isDisabled ? 'disabled' : '',\n                  ref: el => filterRefs.current[`types-${type}`] = el,\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    name: \"type\",\n                    value: type,\n                    checked: ((_selectedFilters$type = selectedFilters.types) === null || _selectedFilters$type === void 0 ? void 0 : _selectedFilters$type.includes(type)) || false,\n                    onChange: () => handleFilterChange('types', type),\n                    disabled: isDisabled\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1123,\n                    columnNumber: 23\n                  }, this), type]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1118,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1114,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1110,\n            columnNumber: 13\n          }, this), filters.types.length > 6 && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"show-more-btn\",\n            onClick: () => toggleShowMore('types'),\n            children: showMore.types ? 'Менше ↑' : 'Більше ↓'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1138,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1108,\n          columnNumber: 11\n        }, this), activeFilter && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"filter-tag\",\n          ref: tagRef,\n          onClick: applyFilters,\n          style: {\n            top: filterRefs.current[`${activeFilter.type}-${activeFilter.value}`] ? `${filterRefs.current[`${activeFilter.type}-${activeFilter.value}`].getBoundingClientRect().top - filterRefs.current[`${activeFilter.type}-${activeFilter.value}`].closest('.filters').getBoundingClientRect().top + filterRefs.current[`${activeFilter.type}-${activeFilter.value}`].offsetHeight / 2}px` : '0px'\n          },\n          children: [\"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u0438 \\u0442\\u043E\\u0432\\u0430\\u0440\\u0438 (\", previewProductCount, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"apply-filters-btn\",\n          onClick: applyFilters,\n          children: [\"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u0438 \\u0442\\u043E\\u0432\\u0430\\u0440\\u0438 (\", previewProductCount, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 842,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"products\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `products-list ${!isLoading ? 'loaded' : ''}`,\n          children: filteredProducts.length > 0 ? filteredProducts.slice(isPaginated ? (currentPage - 1) * productsPerPage : (startPage - 1) * productsPerPage, isPaginated ? currentPage * productsPerPage : startPage * productsPerPage + loadMorePages * productsPerPage).map((product, index) => /*#__PURE__*/_jsxDEV(Link, {\n            to: `/product/${product.id}`,\n            className: \"product-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: getProductName(product)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1197,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: product.images && product.images.length > 0 ? product.images[0] : '/img/placeholder.webp',\n              alt: product.name,\n              onError: e => e.target.src = '/img/placeholder.webp'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1198,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"price\",\n              children: [getMinPrice(product.store_prices), \" \\u0433\\u0440\\u043D\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1207,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: product.description || 'Опис відсутній'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1208,\n              columnNumber: 21\n            }, this)]\n          }, `${product.id}-${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1192,\n            columnNumber: 19\n          }, this)) : !isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u0422\\u043E\\u0432\\u0430\\u0440\\u0438 \\u043D\\u0435 \\u0437\\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u043E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1212,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1180,\n          columnNumber: 11\n        }, this), !isLoading && totalProducts > productsPerPage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagination-container\",\n          children: [(startPage - 1 + loadMorePages) * productsPerPage < totalProducts && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"load-more-btn\",\n            onClick: handleLoadMore,\n            children: \"\\u0417\\u0430\\u0432\\u0430\\u043D\\u0442\\u0430\\u0436\\u0438\\u0442\\u0438 \\u0449\\u0435\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1219,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pagination\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"pagination-btn\",\n              onClick: () => handlePageChange(currentPage - 1),\n              disabled: currentPage === 1,\n              children: \"\\u041F\\u043E\\u043F\\u0435\\u0440\\u0435\\u0434\\u043D\\u044F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1224,\n              columnNumber: 17\n            }, this), pageNumbers.map(number => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `pagination-btn ${currentPage === number ? 'active' : ''}`,\n              onClick: () => handlePageChange(number),\n              children: number\n            }, number, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1232,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"pagination-btn\",\n              onClick: () => handlePageChange(currentPage + 1),\n              disabled: currentPage === totalPages,\n              children: \"\\u041D\\u0430\\u0441\\u0442\\u0443\\u043F\\u043D\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1242,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1223,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1217,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 840,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 830,\n    columnNumber: 5\n  }, this);\n}\n_s(ProductList, \"sVnlscWghKZT8VbI3uWQhxjMPps=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = ProductList;\nexport default ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useParams","useLocation","Link","axios","categoryNames","jsxDEV","_jsxDEV","ProductList","searchTerm","_s","_appliedFilters$brand","_appliedFilters$price","_appliedFilters$volum","_appliedFilters$types","_appliedFilters$categ","_appliedFilters$categ2","_appliedFilters$brand2","_appliedFilters$price2","_appliedFilters$volum2","_appliedFilters$types2","categoryId","location","queryParams","URLSearchParams","search","initialType","get","searchQuery","isSearchPage","pathname","console","log","filters","setFilters","brands","priceRanges","volumes","types","categories","selectedFilters","setSelectedFilters","appliedFilters","setAppliedFilters","allProducts","setAllProducts","filteredProducts","setFilteredProducts","totalProducts","setTotalProducts","previewProductCount","setPreviewProductCount","currentPage","setCurrentPage","productsPerPage","isPaginated","setIsPaginated","startPage","setStartPage","loadMorePages","setLoadMorePages","brandSearch","setBrandSearch","customPriceFrom","setCustomPriceFrom","customPriceTo","setCustomPriceTo","activeFilter","setActiveFilter","disabledFilters","setDisabledFilters","Set","showMore","setShowMore","isLoading","setIsLoading","filterRefs","tagRef","filterItemsRefs","getMinPrice","storePrices","length","Math","min","map","sp","price","calculateFilteredProducts","tempFilters","filtered","filter","product","name","toLowerCase","includes","category_id","category_name","brand_name","priceFrom","parseFloat","priceTo","minPrice","store_prices","some","range","max","Infinity","split","Number","volume","feature_type","calculatePreviewProducts","updateDisabledFilters","newDisabledFilters","baseFilters","forEach","brand","add","label","type","category","fetchProducts","requestParams","undefined","limit","response","params","productCount","data","products","p","id","productsData","brandCounts","typeCounts","categoryCounts","allVolumes","priceBuckets","allBrands","sort","a","b","allPriceRanges","has","allVolumesSorted","numA","replace","numB","allTypes","Boolean","allCategories","setTimeout","typeCheckbox","document","querySelector","checked","error","alert","allProductsCount","matches","count","handleFilterChange","filterType","value","prev","currentValues","updatedValues","v","updatedFilters","removeFilter","resetAllFilters","emptyFilters","applyFilters","toggleShowMore","handleBrandSearch","e","target","handleCustomPriceChange","field","numValue","getVisibleItems","items","filteredItems","topItems","slice","remainingItems","localeCompare","getProductName","totalPages","ceil","handlePageChange","page","window","scrollTo","top","behavior","handleLoadMore","pageNumbers","i","push","totalAppliedFilters","Object","keys","container","current","visibleItems","maxVisible","isExpanded","collapsedHeight","scrollHeight","style","maxHeight","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","el","index","_selectedFilters$cate","isDisabled","onChange","disabled","placeholder","_selectedFilters$bran","_selectedFilters$pric","_selectedFilters$volu","_selectedFilters$type","getBoundingClientRect","closest","offsetHeight","to","src","images","alt","onError","description","number","_c","$RefreshReg$"],"sources":["C:/Users/pushy/Documents/GitHub/price-ua-react/price-ua-react-frontend/src/components/ProductList.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { useParams, useLocation, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './ProductList.css';\r\nimport { categoryNames } from './SearchResults';\r\n\r\nfunction ProductList({ searchTerm }) {\r\n  const { categoryId } = useParams();\r\n  const location = useLocation();\r\n\r\n  // Отримуємо параметри з URL, враховуючи як 'query', так і 'search'\r\n  const queryParams = new URLSearchParams(location.search);\r\n  const initialType = queryParams.get('type') || '';\r\n  const searchQuery = queryParams.get('query') || queryParams.get('search') || searchTerm || '';\r\n  const isSearchPage = location.pathname === '/search';\r\n  console.log('ProductList initialized with:', {\r\n    categoryId,\r\n    searchTerm,\r\n    searchQuery,\r\n    initialType,\r\n    isSearchPage,\r\n    location: location.pathname + location.search,\r\n  });\r\n\r\n  // Стан для всіх фільтрів\r\n  const [filters, setFilters] = useState({\r\n    brands: [],\r\n    priceRanges: [],\r\n    volumes: [],\r\n    types: [],\r\n    categories: [],\r\n  });\r\n\r\n  // Стан для вибраних фільтрів\r\n  const [selectedFilters, setSelectedFilters] = useState({\r\n    brands: [],\r\n    priceRanges: [],\r\n    volumes: [],\r\n    types: initialType ? [initialType] : [],\r\n    categories: categoryId ? [categoryId] : [],\r\n  });\r\n\r\n  // Стан для застосованих фільтрів\r\n  const [appliedFilters, setAppliedFilters] = useState({\r\n    brands: [],\r\n    priceRanges: [],\r\n    volumes: [],\r\n    types: initialType ? [initialType] : [],\r\n    categories: categoryId ? [categoryId] : [],\r\n  });\r\n\r\n  // Стан для всіх продуктів (з API)\r\n  const [allProducts, setAllProducts] = useState([]);\r\n  // Стан для відфільтрованих продуктів і пагінації\r\n  const [filteredProducts, setFilteredProducts] = useState([]);\r\n  const [totalProducts, setTotalProducts] = useState(0);\r\n  const [previewProductCount, setPreviewProductCount] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const productsPerPage = 24;\r\n  const [isPaginated, setIsPaginated] = useState(true);\r\n  const [startPage, setStartPage] = useState(1);\r\n  const [loadMorePages, setLoadMorePages] = useState(1);\r\n\r\n  // Стан для пошуку брендів\r\n  const [brandSearch, setBrandSearch] = useState('');\r\n\r\n  // Стан для кастомного діапазону цін\r\n  const [customPriceFrom, setCustomPriceFrom] = useState('');\r\n  const [customPriceTo, setCustomPriceTo] = useState('');\r\n\r\n  // Стан для активного фільтру\r\n  const [activeFilter, setActiveFilter] = useState(null);\r\n\r\n  // Стан для неактивних фільтрів\r\n  const [disabledFilters, setDisabledFilters] = useState({\r\n    brands: new Set(),\r\n    priceRanges: new Set(),\r\n    volumes: new Set(),\r\n    types: new Set(),\r\n    categories: new Set(),\r\n  });\r\n\r\n  // Стан для \"Більше/Менше\"\r\n  const [showMore, setShowMore] = useState({\r\n    brands: false,\r\n    priceRanges: false,\r\n    volumes: false,\r\n    types: false,\r\n    categories: false,\r\n  });\r\n\r\n  // Стан для індикатора завантаження\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // Рефи для позиціонування плашки та анімації фільтрів\r\n  const filterRefs = useRef({});\r\n  const tagRef = useRef(null);\r\n  const filterItemsRefs = useRef({});\r\n\r\n  // Функція для отримання мінімальної ціни з store_prices\r\n  const getMinPrice = (storePrices) => {\r\n    if (!storePrices || storePrices.length === 0) return 0;\r\n    return Math.min(...storePrices.map(sp => sp.price));\r\n  };\r\n\r\n  // Функція для попередньої фільтрації (для previewProductCount та disabledFilters)\r\n  const calculateFilteredProducts = useCallback((tempFilters) => {\r\n    let filtered = [...allProducts];\r\n\r\n    // Фільтр за пошуковим запитом\r\n    if (searchQuery) {\r\n      filtered = filtered.filter(product =>\r\n        product.name.toLowerCase().includes(searchQuery.toLowerCase())\r\n      );\r\n    }\r\n\r\n    // Фільтр за категорією\r\n    if (categoryId && !isSearchPage) {\r\n      filtered = filtered.filter(product => product.category_id === categoryId);\r\n    } else if (tempFilters.categories.length > 0 && isSearchPage) {\r\n      filtered = filtered.filter(product =>\r\n        tempFilters.categories.includes(product.category_name)\r\n      );\r\n    }\r\n\r\n    // Фільтр за брендами\r\n    if (tempFilters.brands.length > 0) {\r\n      filtered = filtered.filter(product =>\r\n        tempFilters.brands.includes(product.brand_name)\r\n      );\r\n    }\r\n\r\n    // Фільтр за ціною\r\n    if (customPriceFrom !== '' && customPriceTo !== '') {\r\n      const priceFrom = parseFloat(customPriceFrom);\r\n      const priceTo = parseFloat(customPriceTo);\r\n      filtered = filtered.filter(product => {\r\n        const minPrice = getMinPrice(product.store_prices);\r\n        return minPrice >= priceFrom && minPrice <= priceTo;\r\n      });\r\n    } else if (tempFilters.priceRanges.length > 0) {\r\n      filtered = filtered.filter(product => {\r\n        const minPrice = getMinPrice(product.store_prices);\r\n        return tempFilters.priceRanges.some(range => {\r\n          const [min, max] = range.includes('+')\r\n            ? [1000, Infinity]\r\n            : range.split('-').map(Number);\r\n          return minPrice >= min && (max === Infinity || minPrice <= max);\r\n        });\r\n      });\r\n    }\r\n\r\n    // Фільтр за об’ємами\r\n    if (tempFilters.volumes.length > 0) {\r\n      filtered = filtered.filter(product =>\r\n        tempFilters.volumes.includes(product.volume)\r\n      );\r\n    }\r\n\r\n    // Фільтр за типами\r\n    if (tempFilters.types.length > 0) {\r\n      filtered = filtered.filter(product =>\r\n        tempFilters.types.includes(product.feature_type)\r\n      );\r\n    }\r\n\r\n    return filtered;\r\n  }, [allProducts, searchQuery, categoryId, isSearchPage, customPriceFrom, customPriceTo]);\r\n\r\n  // Функція для previewProductCount\r\n  const calculatePreviewProducts = useCallback(() => {\r\n    const filtered = calculateFilteredProducts(selectedFilters);\r\n    return filtered.length;\r\n  }, [calculateFilteredProducts, selectedFilters]);\r\n\r\n  // Функція для оновлення неактивних фільтрів\r\n  const updateDisabledFilters = useCallback(() => {\r\n    const newDisabledFilters = {\r\n      brands: new Set(),\r\n      priceRanges: new Set(),\r\n      volumes: new Set(),\r\n      types: new Set(),\r\n      categories: new Set(),\r\n    };\r\n\r\n    // Базові фільтри: усі вибрані фільтри, крім поточного типу\r\n    const baseFilters = {\r\n      brands: [...selectedFilters.brands],\r\n      priceRanges: [...selectedFilters.priceRanges],\r\n      volumes: [...selectedFilters.volumes],\r\n      types: [...selectedFilters.types],\r\n      categories: [...selectedFilters.categories],\r\n    };\r\n\r\n    // Перевірка кожного бренду\r\n    filters.brands.forEach(brand => {\r\n      const tempFilters = {\r\n        ...baseFilters,\r\n        brands: [brand],\r\n        priceRanges: baseFilters.priceRanges,\r\n        volumes: baseFilters.volumes,\r\n        types: baseFilters.types,\r\n        categories: baseFilters.categories,\r\n      };\r\n      const filtered = calculateFilteredProducts(tempFilters);\r\n      if (filtered.length === 0) {\r\n        newDisabledFilters.brands.add(brand);\r\n      }\r\n    });\r\n\r\n    // Перевірка кожного цінового діапазону\r\n    filters.priceRanges.forEach(range => {\r\n      const tempFilters = {\r\n        ...baseFilters,\r\n        brands: baseFilters.brands,\r\n        priceRanges: [range.label],\r\n        volumes: baseFilters.volumes,\r\n        types: baseFilters.types,\r\n        categories: baseFilters.categories,\r\n      };\r\n      const filtered = calculateFilteredProducts(tempFilters);\r\n      if (filtered.length === 0) {\r\n        newDisabledFilters.priceRanges.add(range.label);\r\n      }\r\n    });\r\n\r\n    // Перевірка кожного об’єму\r\n    filters.volumes.forEach(volume => {\r\n      const tempFilters = {\r\n        ...baseFilters,\r\n        brands: baseFilters.brands,\r\n        priceRanges: baseFilters.priceRanges,\r\n        volumes: [volume],\r\n        types: baseFilters.types,\r\n        categories: baseFilters.categories,\r\n      };\r\n      const filtered = calculateFilteredProducts(tempFilters);\r\n      if (filtered.length === 0) {\r\n        newDisabledFilters.volumes.add(volume);\r\n      }\r\n    });\r\n\r\n    // Перевірка кожного типу\r\n    filters.types.forEach(type => {\r\n      const tempFilters = {\r\n        ...baseFilters,\r\n        brands: baseFilters.brands,\r\n        priceRanges: baseFilters.priceRanges,\r\n        volumes: baseFilters.volumes,\r\n        types: [type],\r\n        categories: baseFilters.categories,\r\n      };\r\n      const filtered = calculateFilteredProducts(tempFilters);\r\n      if (filtered.length === 0) {\r\n        newDisabledFilters.types.add(type);\r\n      }\r\n    });\r\n\r\n    // Перевірка кожної категорії (для /search)\r\n    if (isSearchPage) {\r\n      filters.categories.forEach(category => {\r\n        const tempFilters = {\r\n          ...baseFilters,\r\n          brands: baseFilters.brands,\r\n          priceRanges: baseFilters.priceRanges,\r\n          volumes: baseFilters.volumes,\r\n          types: baseFilters.types,\r\n          categories: [category],\r\n        };\r\n        const filtered = calculateFilteredProducts(tempFilters);\r\n        if (filtered.length === 0) {\r\n          newDisabledFilters.categories.add(category);\r\n        }\r\n      });\r\n    }\r\n\r\n    setDisabledFilters(newDisabledFilters);\r\n  }, [filters, selectedFilters, calculateFilteredProducts, isSearchPage]);\r\n\r\n  // Завантаження всіх продуктів із API\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      setIsLoading(true); // Починаємо завантаження\r\n      try {\r\n        // Логування параметрів запиту\r\n        const requestParams = {\r\n          search: searchQuery || undefined,\r\n          category: categoryId && !isSearchPage ? categoryId : undefined,\r\n          limit: 1000,\r\n        };\r\n        console.log('Fetching products with params:', requestParams);\r\n\r\n        // Завантажуємо всі продукти з урахуванням пошукового запиту та категорії\r\n        const response = await axios.get('https://price-ua-react-backend.onrender.com/products', {\r\n          params: requestParams,\r\n        });\r\n\r\n        // Логування отриманих даних\r\n        console.log('API response:', {\r\n          productCount: response.data.products.length,\r\n          products: response.data.products.map(p => ({\r\n            id: p.id,\r\n            name: p.name,\r\n            category_id: p.category_id,\r\n            category_name: p.category_name,\r\n          })),\r\n        });\r\n\r\n        let productsData = response.data.products || [];\r\n\r\n        // Ініціалізація фільтрів на основі отриманих продуктів\r\n        const brandCounts = {};\r\n        const typeCounts = {};\r\n        const categoryCounts = {};\r\n        const allVolumes = new Set();\r\n        const priceBuckets = new Set();\r\n        productsData.forEach(product => {\r\n          const brand = product.brand_name;\r\n          const type = product.feature_type;\r\n          const category = product.category_name;\r\n          const volume = product.volume;\r\n          const minPrice = getMinPrice(product.store_prices);\r\n          brandCounts[brand] = (brandCounts[brand] || 0) + 1;\r\n          if (type) typeCounts[type] = (typeCounts[type] || 0) + 1;\r\n          categoryCounts[category] = (categoryCounts[category] || 0) + 1;\r\n          if (volume) allVolumes.add(volume);\r\n          if (minPrice > 0) {\r\n            if (minPrice <= 100) priceBuckets.add('0-100');\r\n            else if (minPrice <= 200) priceBuckets.add('100-200');\r\n            else if (minPrice <= 300) priceBuckets.add('200-300');\r\n            else if (minPrice <= 400) priceBuckets.add('300-400');\r\n            else if (minPrice <= 500) priceBuckets.add('400-500');\r\n            else if (minPrice <= 600) priceBuckets.add('500-600');\r\n            else if (minPrice <= 700) priceBuckets.add('600-700');\r\n            else if (minPrice <= 800) priceBuckets.add('700-800');\r\n            else if (minPrice <= 900) priceBuckets.add('800-900');\r\n            else if (minPrice <= 1000) priceBuckets.add('900-1000');\r\n            else priceBuckets.add('1000+');\r\n          }\r\n        });\r\n\r\n        const allBrands = [...new Set(productsData.map(p => p.brand_name))].sort(\r\n          (a, b) => (brandCounts[b] || 0) - (brandCounts[a] || 0)\r\n        );\r\n        const allPriceRanges = [\r\n          { label: '0-100', min: 0, max: 100 },\r\n          { label: '100-200', min: 100, max: 200 },\r\n          { label: '200-300', min: 200, max: 300 },\r\n          { label: '300-400', min: 300, max: 400 },\r\n          { label: '400-500', min: 400, max: 500 },\r\n          { label: '500-600', min: 500, max: 600 },\r\n          { label: '600-700', min: 600, max: 700 },\r\n          { label: '700-800', min: 700, max: 800 },\r\n          { label: '800-900', min: 800, max: 900 },\r\n          { label: '900-1000', min: 900, max: 1000 },\r\n          { label: '1000+', min: 1000, max: Infinity },\r\n        ].filter(range => priceBuckets.has(range.label));\r\n        const allVolumesSorted = [...allVolumes].sort((a, b) => {\r\n          const numA = parseFloat(a.replace(/[^0-9.]/g, '')) || 0;\r\n          const numB = parseFloat(b.replace(/[^0-9.]/g, '')) || 0;\r\n          return numA - numB;\r\n        });\r\n        const allTypes = [...new Set(productsData.map(p => p.feature_type).filter(Boolean))].sort(\r\n          (a, b) => (typeCounts[b] || 0) - (typeCounts[a] || 0)\r\n        );\r\n        const allCategories = isSearchPage\r\n          ? [...new Set(productsData.map(p => p.category_name))].sort(\r\n              (a, b) => (categoryCounts[b] || 0) - (categoryCounts[a] || 0)\r\n            )\r\n          : [categoryId].filter(Boolean);\r\n\r\n        setFilters({\r\n          brands: allBrands,\r\n          priceRanges: allPriceRanges,\r\n          volumes: allVolumesSorted,\r\n          types: allTypes,\r\n          categories: allCategories,\r\n        });\r\n\r\n        setAllProducts(productsData);\r\n        setFilteredProducts(productsData); // Спочатку встановлюємо, але useEffect нижче оновить\r\n        setTotalProducts(productsData.length);\r\n        setPreviewProductCount(productsData.length);\r\n        setCurrentPage(1);\r\n        setStartPage(1);\r\n        setLoadMorePages(1);\r\n        setIsPaginated(true);\r\n\r\n        // Скидання фільтрів\r\n        setSelectedFilters({\r\n          brands: [],\r\n          priceRanges: [],\r\n          volumes: [],\r\n          types: initialType ? [initialType] : [],\r\n          categories: categoryId ? [categoryId] : [],\r\n        });\r\n        setAppliedFilters({\r\n          brands: [],\r\n          priceRanges: [],\r\n          volumes: [],\r\n          types: initialType ? [initialType] : [],\r\n          categories: categoryId ? [categoryId] : [],\r\n        });\r\n\r\n        setBrandSearch('');\r\n        setCustomPriceFrom('');\r\n        setCustomPriceTo('');\r\n\r\n        setDisabledFilters({\r\n          brands: new Set(),\r\n          priceRanges: new Set(),\r\n          volumes: new Set(),\r\n          types: new Set(),\r\n          categories: new Set(),\r\n        });\r\n\r\n        // Автоматично вибираємо чекбокс типу\r\n        if (initialType) {\r\n          setTimeout(() => {\r\n            const typeCheckbox = document.querySelector(`input[name=\"type\"][value=\"${initialType}\"]`);\r\n            if (typeCheckbox) typeCheckbox.checked = true;\r\n          }, 0);\r\n        }\r\n      } catch (error) {\r\n        console.error('Помилка завантаження продуктів:', error);\r\n        alert('Не вдалося завантажити продукти. Перевірте підключення до сервера.');\r\n        setAllProducts([]);\r\n        setFilteredProducts([]);\r\n        setTotalProducts(0);\r\n        setPreviewProductCount(0);\r\n      } finally {\r\n        setIsLoading(false); // Завершуємо завантаження\r\n      }\r\n    };\r\n\r\n    fetchProducts();\r\n  }, [categoryId, searchQuery, initialType, isSearchPage]);\r\n\r\n  // Оновлення previewProductCount та disabledFilters при зміні selectedFilters\r\n  useEffect(() => {\r\n    if (!isLoading) {\r\n      setPreviewProductCount(calculatePreviewProducts());\r\n      updateDisabledFilters();\r\n    }\r\n  }, [\r\n    selectedFilters,\r\n    customPriceFrom,\r\n    customPriceTo,\r\n    searchQuery,\r\n    categoryId,\r\n    isSearchPage,\r\n    allProducts,\r\n    isLoading,\r\n    calculatePreviewProducts,\r\n    updateDisabledFilters,\r\n  ]);\r\n\r\n  // Клієнтська фільтрація при зміні застосованих фільтрів\r\n  useEffect(() => {\r\n    if (!isLoading && allProducts.length > 0) {\r\n      console.log('Starting client-side filtering:', {\r\n        allProductsCount: allProducts.length,\r\n        searchQuery,\r\n        categoryId,\r\n        isSearchPage,\r\n        appliedFilters,\r\n        customPriceFrom,\r\n        customPriceTo,\r\n      });\r\n\r\n      let filtered = [...allProducts];\r\n\r\n      // Фільтр за пошуковим запитом\r\n      if (searchQuery) {\r\n        console.log('Applying searchQuery filter:', { searchQuery });\r\n        filtered = filtered.filter(product => {\r\n          const matches = product.name.toLowerCase().includes(searchQuery.toLowerCase());\r\n          if (!matches) {\r\n            console.log(`Excluding product: ${product.name} (does not match \"${searchQuery}\")`);\r\n          }\r\n          return matches;\r\n        });\r\n        console.log('After searchQuery filter:', {\r\n          count: filtered.length,\r\n          products: filtered.map(p => p.name),\r\n        });\r\n      }\r\n\r\n      // Фільтр за категорією\r\n      if (categoryId && !isSearchPage) {\r\n        console.log('Applying categoryId filter:', { categoryId });\r\n        filtered = filtered.filter(product => {\r\n          const matches = product.category_id === categoryId;\r\n          if (!matches) {\r\n            console.log(`Excluding product: ${product.name} (category_id ${product.category_id} does not match \"${categoryId}\")`);\r\n          }\r\n          return matches;\r\n        });\r\n        console.log('After categoryId filter:', {\r\n          count: filtered.length,\r\n          products: filtered.map(p => p.name),\r\n        });\r\n      } else if (appliedFilters.categories.length > 0 && isSearchPage) {\r\n        console.log('Applying categories filter:', { categories: appliedFilters.categories });\r\n        filtered = filtered.filter(product => {\r\n          const matches = appliedFilters.categories.includes(product.category_name);\r\n          if (!matches) {\r\n            console.log(`Excluding product: ${product.name} (category_name ${product.category_name} not in ${appliedFilters.categories})`);\r\n          }\r\n          return matches;\r\n        });\r\n        console.log('After categories filter:', {\r\n          count: filtered.length,\r\n          products: filtered.map(p => p.name),\r\n        });\r\n      }\r\n\r\n      // Фільтр за брендами\r\n      if (appliedFilters.brands.length > 0) {\r\n        console.log('Applying brands filter:', { brands: appliedFilters.brands });\r\n        filtered = filtered.filter(product => {\r\n          const matches = appliedFilters.brands.includes(product.brand_name);\r\n          if (!matches) {\r\n            console.log(`Excluding product: ${product.name} (brand ${product.brand_name} not in ${appliedFilters.brands})`);\r\n          }\r\n          return matches;\r\n        });\r\n        console.log('After brands filter:', {\r\n          count: filtered.length,\r\n          products: filtered.map(p => p.name),\r\n        });\r\n      }\r\n\r\n      // Фільтр за ціною\r\n      if (customPriceFrom !== '' && customPriceTo !== '') {\r\n        const priceFrom = parseFloat(customPriceFrom);\r\n        const priceTo = parseFloat(customPriceTo);\r\n        console.log('Applying custom price filter:', { priceFrom, priceTo });\r\n        filtered = filtered.filter(product => {\r\n          const minPrice = getMinPrice(product.store_prices);\r\n          const matches = minPrice >= priceFrom && minPrice <= priceTo;\r\n          if (!matches) {\r\n            console.log(`Excluding product: ${product.name} (price ${minPrice} not in range ${priceFrom}-${priceTo})`);\r\n          }\r\n          return matches;\r\n        });\r\n        console.log('After custom price filter:', {\r\n          count: filtered.length,\r\n          products: filtered.map(p => p.name),\r\n        });\r\n      } else if (appliedFilters.priceRanges.length > 0) {\r\n        console.log('Applying priceRanges filter:', { priceRanges: appliedFilters.priceRanges });\r\n        filtered = filtered.filter(product => {\r\n          const minPrice = getMinPrice(product.store_prices);\r\n          const matches = appliedFilters.priceRanges.some(range => {\r\n            const [min, max] = range.includes('+')\r\n              ? [1000, Infinity]\r\n              : range.split('-').map(Number);\r\n            return minPrice >= min && (max === Infinity || minPrice <= max);\r\n          });\r\n          if (!matches) {\r\n            console.log(`Excluding product: ${product.name} (price ${minPrice} not in ranges ${appliedFilters.priceRanges})`);\r\n          }\r\n          return matches;\r\n        });\r\n        console.log('After priceRanges filter:', {\r\n          count: filtered.length,\r\n          products: filtered.map(p => p.name),\r\n        });\r\n      }\r\n\r\n      // Фільтр за об’ємами\r\n      if (appliedFilters.volumes.length > 0) {\r\n        console.log('Applying volumes filter:', { volumes: appliedFilters.volumes });\r\n        filtered = filtered.filter(product => {\r\n          const matches = appliedFilters.volumes.includes(product.volume);\r\n          if (!matches) {\r\n            console.log(`Excluding product: ${product.name} (volume ${product.volume} not in ${appliedFilters.volumes})`);\r\n          }\r\n          return matches;\r\n        });\r\n        console.log('After volumes filter:', {\r\n          count: filtered.length,\r\n          products: filtered.map(p => p.name),\r\n        });\r\n      }\r\n\r\n      // Фільтр за типами\r\n      if (appliedFilters.types.length > 0) {\r\n        console.log('Applying types filter:', { types: appliedFilters.types });\r\n        filtered = filtered.filter(product => {\r\n          const matches = appliedFilters.types.includes(product.feature_type);\r\n          if (!matches) {\r\n            console.log(`Excluding product: ${product.name} (type ${product.feature_type} not in ${appliedFilters.types})`);\r\n          }\r\n          return matches;\r\n        });\r\n        console.log('After types filter:', {\r\n          count: filtered.length,\r\n          products: filtered.map(p => p.name),\r\n        });\r\n      }\r\n\r\n      // Логування фінального результату\r\n      console.log('Final filtered products:', {\r\n        count: filtered.length,\r\n        products: filtered.map(p => ({\r\n          id: p.id,\r\n          name: p.name,\r\n          category_id: p.category_id,\r\n          category_name: p.category_name,\r\n        })),\r\n      });\r\n\r\n      setFilteredProducts(filtered);\r\n      setTotalProducts(filtered.length);\r\n    }\r\n  }, [allProducts, appliedFilters, customPriceFrom, customPriceTo, searchQuery, categoryId, isSearchPage, isLoading]);\r\n\r\n  // Обробка вибору фільтру\r\n  const handleFilterChange = (filterType, value) => {\r\n    setSelectedFilters((prev) => {\r\n      const currentValues = prev[filterType] || [];\r\n      let updatedValues;\r\n      if (currentValues.includes(value)) {\r\n        updatedValues = currentValues.filter((v) => v !== value);\r\n      } else {\r\n        updatedValues = [...currentValues, value];\r\n      }\r\n      const updatedFilters = {\r\n        ...prev,\r\n        [filterType]: updatedValues,\r\n      };\r\n      if (filterType === 'priceRanges') {\r\n        setCustomPriceFrom('');\r\n        setCustomPriceTo('');\r\n      }\r\n      return updatedFilters;\r\n    });\r\n    setActiveFilter({ type: filterType, value });\r\n  };\r\n\r\n  // Видалення одного фільтру\r\n  const removeFilter = (filterType, value) => {\r\n    setSelectedFilters((prev) => {\r\n      const updatedValues = (prev[filterType] || []).filter((v) => v !== value);\r\n      const updatedFilters = {\r\n        ...prev,\r\n        [filterType]: updatedValues,\r\n      };\r\n      setAppliedFilters({\r\n        ...prev,\r\n        [filterType]: updatedValues,\r\n      });\r\n      return updatedFilters;\r\n    });\r\n  };\r\n\r\n  // Скидання всіх фільтрів\r\n  const resetAllFilters = () => {\r\n    const emptyFilters = {\r\n      brands: [],\r\n      priceRanges: [],\r\n      volumes: [],\r\n      types: [],\r\n      categories: [],\r\n    };\r\n    setSelectedFilters(emptyFilters);\r\n    setAppliedFilters(emptyFilters);\r\n    setBrandSearch('');\r\n    setCustomPriceFrom('');\r\n    setCustomPriceTo('');\r\n    setDisabledFilters({\r\n      brands: new Set(),\r\n      priceRanges: new Set(),\r\n      volumes: new Set(),\r\n      types: new Set(),\r\n      categories: new Set(),\r\n    });\r\n    setCurrentPage(1);\r\n    setStartPage(1);\r\n    setLoadMorePages(1);\r\n    setIsPaginated(true);\r\n  };\r\n\r\n  // Застосування фільтрів\r\n  const applyFilters = () => {\r\n    setAppliedFilters({ ...selectedFilters });\r\n    setCurrentPage(1);\r\n    setStartPage(1);\r\n    setLoadMorePages(1);\r\n    setIsPaginated(true);\r\n    setActiveFilter(null);\r\n  };\r\n\r\n  // Перемикання \"Більше\"/\"Менше\"\r\n  const toggleShowMore = (filterType) => {\r\n    setShowMore((prev) => ({\r\n      ...prev,\r\n      [filterType]: !prev[filterType],\r\n    }));\r\n  };\r\n\r\n  // Обробка пошуку брендів\r\n  const handleBrandSearch = (e) => {\r\n    setBrandSearch(e.target.value);\r\n  };\r\n\r\n  // Обробка кастомного діапазону цін\r\n  const handleCustomPriceChange = (field, value) => {\r\n    const numValue = value.replace(/[^0-9]/g, '');\r\n    if (field === 'from') {\r\n      setCustomPriceFrom(numValue);\r\n    } else {\r\n      setCustomPriceTo(numValue);\r\n    }\r\n    if (numValue !== '') {\r\n      setSelectedFilters((prev) => ({\r\n        ...prev,\r\n        priceRanges: [],\r\n      }));\r\n      setAppliedFilters((prev) => ({\r\n        ...prev,\r\n        priceRanges: [],\r\n      }));\r\n    }\r\n  };\r\n\r\n  // Обмеження кількості елементів для фільтрів\r\n  const getVisibleItems = useCallback((items, filterType) => {\r\n    if (!items) return [];\r\n\r\n    let filteredItems = items;\r\n\r\n    if (filterType === 'brands') {\r\n      filteredItems = items.filter((brand) =>\r\n        brand.toLowerCase().includes(brandSearch.toLowerCase())\r\n      );\r\n      const topItems = filteredItems.slice(0, 12); // Top 12 brands (by count)\r\n      const remainingItems = filteredItems.slice(12); // Remaining brands\r\n      if (showMore.brands || filteredItems.length <= 12) {\r\n        // Keep top 12 in original order, sort remaining alphabetically\r\n        return [...topItems, ...remainingItems.sort((a, b) => a.localeCompare(b))];\r\n      }\r\n      return topItems;\r\n    }\r\n\r\n    if (filterType === 'types') {\r\n      const topItems = filteredItems.slice(0, 6); // Top 6 types (by count)\r\n      const remainingItems = filteredItems.slice(6); // Remaining types\r\n      if (showMore.types || filteredItems.length <= 6) {\r\n        // Keep top 6 in original order, sort remaining alphabetically\r\n        return [...topItems, ...remainingItems.sort((a, b) => a.localeCompare(b))];\r\n      }\r\n      return topItems;\r\n    }\r\n\r\n    if (filterType === 'categories') {\r\n      if (showMore.categories || items.length <= 6) {\r\n        return [...items].sort((a, b) => a.localeCompare(b));\r\n      }\r\n      return items.slice(0, 6);\r\n    }\r\n\r\n    if (showMore[filterType] || items.length <= 12) {\r\n      return items;\r\n    }\r\n    return items.slice(0, 12);\r\n  }, [brandSearch, showMore]);\r\n\r\n  // Модифікація назви продукту\r\n  const getProductName = (product) => {\r\n    return `${product.name} (${product.volume || 'Об’єм не вказано'})`;\r\n  };\r\n\r\n  // Пагінація\r\n  const totalPages = Math.ceil(totalProducts / productsPerPage);\r\n\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page);\r\n    setStartPage(page);\r\n    setLoadMorePages(1);\r\n    setIsPaginated(true);\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n  };\r\n\r\n  const handleLoadMore = () => {\r\n    setCurrentPage((prev) => prev + 1);\r\n    setLoadMorePages((prev) => prev + 1);\r\n    setIsPaginated(false);\r\n  };\r\n\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= totalPages; i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  const totalAppliedFilters =\r\n    (appliedFilters.brands?.length || 0) +\r\n    (appliedFilters.priceRanges?.length || 0) +\r\n    (appliedFilters.volumes?.length || 0) +\r\n    (appliedFilters.types?.length || 0) +\r\n    (isSearchPage ? (appliedFilters.categories?.length || 0) : 0) +\r\n    (customPriceFrom !== '' && customPriceTo !== '' ? 1 : 0);\r\n\r\n  // Оновлення висоти контейнерів фільтрів при зміні showMore або brandSearch\r\n  useEffect(() => {\r\n    Object.keys(showMore).forEach((filterType) => {\r\n      const container = filterItemsRefs.current[filterType];\r\n      if (container) {\r\n        const items = container.querySelector('.filter-items');\r\n        if (items) {\r\n          const visibleItems = getVisibleItems(filters[filterType], filterType);\r\n          const maxVisible = filterType === 'brands' || filterType === 'priceRanges' || filterType === 'volumes' ? 12 : 6;\r\n          const isExpanded = showMore[filterType] || visibleItems.length <= maxVisible;\r\n          // Обчислюємо висоту для згорнутого стану\r\n          const collapsedHeight = visibleItems.length > maxVisible\r\n            ? items.scrollHeight * (maxVisible / filters[filterType].length)\r\n            : items.scrollHeight;\r\n          // Встановлюємо max-height\r\n          container.style.maxHeight = isExpanded\r\n            ? `${items.scrollHeight}px`\r\n            : `${collapsedHeight}px`;\r\n        }\r\n      }\r\n    });\r\n  }, [showMore, filters, brandSearch, getVisibleItems]);\r\n\r\n  return (\r\n    <div className=\"product-list\">\r\n      <h2>Товари категорії</h2>\r\n      {isLoading && (\r\n        <div className=\"loading-overlay\">\r\n          <div className=\"spinner-container\">\r\n            <div className=\"spinner\"></div>\r\n            <p>Завантаження...</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className=\"product-list-container\">\r\n        {/* Filters column */}\r\n        <div className={`filters ${!isLoading ? 'loaded' : ''}`}>\r\n          <div className=\"filters-header\">\r\n            <h3>Фільтри</h3>\r\n            {totalAppliedFilters > 0 && (\r\n              <div className=\"selected-filters\">\r\n                {isSearchPage &&\r\n                  appliedFilters.categories?.map((category) => (\r\n                    <div key={`category-${category}`} className=\"selected-filter-tag\">\r\n                      <span>{categoryNames[category] || category}</span>\r\n                      <button onClick={() => removeFilter('categories', category)}>\r\n                        ×\r\n                      </button>\r\n                    </div>\r\n                  ))}\r\n                {appliedFilters.brands?.map((brand) => (\r\n                  <div key={`brand-${brand}`} className=\"selected-filter-tag\">\r\n                    <span>{brand}</span>\r\n                    <button onClick={() => removeFilter('brands', brand)}>×</button>\r\n                  </div>\r\n                ))}\r\n                {customPriceFrom !== '' && customPriceTo !== '' ? (\r\n                  <div key=\"custom-price\" className=\"selected-filter-tag\">\r\n                    <span>\r\n                      {customPriceFrom}-{customPriceTo} грн\r\n                    </span>\r\n                    <button\r\n                      onClick={() => {\r\n                        setCustomPriceFrom('');\r\n                        setCustomPriceTo('');\r\n                        applyFilters();\r\n                      }}\r\n                    >\r\n                      ×\r\n                    </button>\r\n                  </div>\r\n                ) : (\r\n                  appliedFilters.priceRanges?.map((range) => (\r\n                    <div key={`price-${range}`} className=\"selected-filter-tag\">\r\n                      <span>{range}</span>\r\n                      <button onClick={() => removeFilter('priceRanges', range)}>\r\n                        ×\r\n                      </button>\r\n                    </div>\r\n                  ))\r\n                )}\r\n                {appliedFilters.volumes?.map((volume) => (\r\n                  <div key={`volume-${volume}`} className=\"selected-filter-tag\">\r\n                    <span>{volume}</span>\r\n                    <button onClick={() => removeFilter('volumes', volume)}>×</button>\r\n                  </div>\r\n                ))}\r\n                {appliedFilters.types?.map((type) => (\r\n                  <div key={`type-${type}`} className=\"selected-filter-tag\">\r\n                    <span>{type}</span>\r\n                    <button onClick={() => removeFilter('types', type)}>×</button>\r\n                  </div>\r\n                ))}\r\n                {totalAppliedFilters > 1 && (\r\n                  <button className=\"reset-all-filters\" onClick={resetAllFilters}>\r\n                    Скинути всі\r\n                  </button>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Category filter (only on /search) */}\r\n          {isSearchPage && searchQuery && (\r\n            <div className=\"filter-section\">\r\n              <h4>Категорія</h4>\r\n              <div\r\n                className=\"filter-items-container\"\r\n                ref={(el) => (filterItemsRefs.current['categories'] = el)}\r\n              >\r\n                <div className=\"filter-items filter-items-single-column\">\r\n                  {getVisibleItems(filters.categories, 'categories').map(\r\n                    (category, index) => {\r\n                      const isDisabled = disabledFilters.categories.has(category);\r\n                      return (\r\n                        <label\r\n                          key={index}\r\n                          className={isDisabled ? 'disabled' : ''}\r\n                          ref={(el) => (filterRefs.current[`categories-${category}`] = el)}\r\n                        >\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            name=\"category\"\r\n                            value={category}\r\n                            checked={\r\n                              selectedFilters.categories?.includes(category) || false\r\n                            }\r\n                            onChange={() => handleFilterChange('categories', category)}\r\n                            disabled={isDisabled}\r\n                          />\r\n                          {categoryNames[category] || category}\r\n                        </label>\r\n                      );\r\n                    }\r\n                  )}\r\n                </div>\r\n              </div>\r\n              {filters.categories.length > 6 && (\r\n                <button\r\n                  className=\"show-more-btn\"\r\n                  onClick={() => toggleShowMore('categories')}\r\n                >\r\n                  {showMore.categories ? 'Менше ↑' : 'Більше ↓'}\r\n                </button>\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          {/* Brand filter */}\r\n          <div className=\"filter-section\">\r\n            <h4>Бренд</h4>\r\n            <input\r\n              type=\"text\"\r\n              className=\"brand-search-input\"\r\n              placeholder=\"Пошук бренду...\"\r\n              value={brandSearch}\r\n              onChange={handleBrandSearch}\r\n            />\r\n            <div\r\n              className=\"filter-items-container\"\r\n              ref={(el) => (filterItemsRefs.current['brands'] = el)}\r\n            >\r\n              <div className=\"filter-items\">\r\n                {getVisibleItems(filters.brands, 'brands').map((brand, index) => {\r\n                  const isDisabled = disabledFilters.brands.has(brand);\r\n                  return (\r\n                    <label\r\n                      key={index}\r\n                      className={`${brand.length > 13 ? 'span-two-columns' : ''} ${\r\n                        isDisabled ? 'disabled' : ''\r\n                      }`}\r\n                      ref={(el) => (filterRefs.current[`brands-${brand}`] = el)}\r\n                    >\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        name=\"brand\"\r\n                        value={brand}\r\n                        checked={selectedFilters.brands?.includes(brand) || false}\r\n                        onChange={() => handleFilterChange('brands', brand)}\r\n                        disabled={isDisabled}\r\n                      />\r\n                      {brand}\r\n                    </label>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n            {filters.brands.length > 12 && (\r\n              <button\r\n                className=\"show-more-btn\"\r\n                onClick={() => toggleShowMore('brands')}\r\n              >\r\n                {showMore.brands ? 'Менше ↑' : 'Більше ↓'}\r\n              </button>\r\n            )}\r\n          </div>\r\n\r\n          {/* Price filter */}\r\n          <div className=\"filter-section\">\r\n            <h4>Ціна (грн)</h4>\r\n            <div className=\"custom-price-inputs\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Від\"\r\n                value={customPriceFrom}\r\n                onChange={(e) => handleCustomPriceChange('from', e.target.value)}\r\n                className=\"price-input\"\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"До\"\r\n                value={customPriceTo}\r\n                onChange={(e) => handleCustomPriceChange('to', e.target.value)}\r\n                className=\"price-input\"\r\n              />\r\n            </div>\r\n            <div\r\n              className=\"filter-items-container\"\r\n              ref={(el) => (filterItemsRefs.current['priceRanges'] = el)}\r\n            >\r\n              <div className=\"filter-items\">\r\n                {getVisibleItems(filters.priceRanges, 'priceRanges').map(\r\n                  (range, index) => {\r\n                    const isDisabled = disabledFilters.priceRanges.has(range.label);\r\n                    return (\r\n                      <label\r\n                        key={index}\r\n                        className={isDisabled ? 'disabled' : ''}\r\n                        ref={(el) =>\r\n                          (filterRefs.current[`priceRanges-${range.label}`] = el)\r\n                        }\r\n                      >\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          name=\"priceRange\"\r\n                          value={range.label}\r\n                          checked={\r\n                            selectedFilters.priceRanges?.includes(range.label) || false\r\n                          }\r\n                          onChange={() =>\r\n                            handleFilterChange('priceRanges', range.label)\r\n                          }\r\n                          disabled={isDisabled}\r\n                        />\r\n                        {range.label}\r\n                      </label>\r\n                    );\r\n                  }\r\n                )}\r\n              </div>\r\n            </div>\r\n            {filters.priceRanges.length > 12 && (\r\n              <button\r\n                className=\"show-more-btn\"\r\n                onClick={() => toggleShowMore('priceRanges')}\r\n              >\r\n                {showMore.priceRanges ? 'Менше ↑' : 'Більше ↓'}\r\n              </button>\r\n            )}\r\n          </div>\r\n\r\n          {/* Volume filter */}\r\n          <div className=\"filter-section\">\r\n            <h4>Об’єм</h4>\r\n            <div\r\n              className=\"filter-items-container\"\r\n              ref={(el) => (filterItemsRefs.current['volumes'] = el)}\r\n            >\r\n              <div className=\"filter-items\">\r\n                {getVisibleItems(filters.volumes, 'volumes').map((volume, index) => {\r\n                  const isDisabled = disabledFilters.volumes.has(volume);\r\n                  return (\r\n                    <label\r\n                      key={index}\r\n                      className={isDisabled ? 'disabled' : ''}\r\n                      ref={(el) => (filterRefs.current[`volumes-${volume}`] = el)}\r\n                    >\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        name=\"volume\"\r\n                        value={volume}\r\n                        checked={selectedFilters.volumes?.includes(volume) || false}\r\n                        onChange={() => handleFilterChange('volumes', volume)}\r\n                        disabled={isDisabled}\r\n                      />\r\n                      {volume}\r\n                    </label>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n            {filters.volumes.length > 12 && (\r\n              <button\r\n                className=\"show-more-btn\"\r\n                onClick={() => toggleShowMore('volumes')}\r\n              >\r\n                {showMore.volumes ? 'Менше ↑' : 'Більше ↓'}\r\n              </button>\r\n            )}\r\n          </div>\r\n\r\n          {/* Type filter */}\r\n          <div className=\"filter-section\">\r\n            <h4>Тип</h4>\r\n            <div\r\n              className=\"filter-items-container\"\r\n              ref={(el) => (filterItemsRefs.current['types'] = el)}\r\n            >\r\n              <div className=\"filter-items filter-items-single-column\">\r\n                {getVisibleItems(filters.types, 'types').map((type, index) => {\r\n                  const isDisabled = disabledFilters.types.has(type);\r\n                  return (\r\n                    <label\r\n                      key={index}\r\n                      className={isDisabled ? 'disabled' : ''}\r\n                      ref={(el) => (filterRefs.current[`types-${type}`] = el)}\r\n                    >\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        name=\"type\"\r\n                        value={type}\r\n                        checked={selectedFilters.types?.includes(type) || false}\r\n                        onChange={() => handleFilterChange('types', type)}\r\n                        disabled={isDisabled}\r\n                      />\r\n                      {type}\r\n                    </label>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n            {filters.types.length > 6 && (\r\n              <button\r\n                className=\"show-more-btn\"\r\n                onClick={() => toggleShowMore('types')}\r\n              >\r\n                {showMore.types ? 'Менше ↑' : 'Більше ↓'}\r\n              </button>\r\n            )}\r\n          </div>\r\n\r\n          {/* Плашка \"Показати товари\" */}\r\n          {activeFilter && (\r\n            <button\r\n              className=\"filter-tag\"\r\n              ref={tagRef}\r\n              onClick={applyFilters}\r\n              style={{\r\n                top: filterRefs.current[`${activeFilter.type}-${activeFilter.value}`]\r\n                  ? `${\r\n                      filterRefs.current[\r\n                        `${activeFilter.type}-${activeFilter.value}`\r\n                      ].getBoundingClientRect().top -\r\n                      filterRefs.current[\r\n                        `${activeFilter.type}-${activeFilter.value}`\r\n                      ].closest('.filters').getBoundingClientRect().top +\r\n                      filterRefs.current[`${activeFilter.type}-${activeFilter.value}`]\r\n                        .offsetHeight / 2\r\n                    }px`\r\n                  : '0px',\r\n              }}\r\n            >\r\n              Показати товари ({previewProductCount})\r\n            </button>\r\n          )}\r\n\r\n          {/* Кнопка \"Показати товари\" */}\r\n          <button className=\"apply-filters-btn\" onClick={applyFilters}>\r\n            Показати товари ({previewProductCount})\r\n          </button>\r\n        </div>\r\n\r\n        {/* Products column */}\r\n        <div className=\"products\">\r\n          <div className={`products-list ${!isLoading ? 'loaded' : ''}`}>\r\n            {filteredProducts.length > 0 ? (\r\n              filteredProducts\r\n                .slice(\r\n                  isPaginated\r\n                    ? (currentPage - 1) * productsPerPage\r\n                    : (startPage - 1) * productsPerPage,\r\n                  isPaginated\r\n                    ? currentPage * productsPerPage\r\n                    : startPage * productsPerPage + loadMorePages * productsPerPage\r\n                )\r\n                .map((product, index) => (\r\n                  <Link\r\n                    to={`/product/${product.id}`}\r\n                    key={`${product.id}-${index}`}\r\n                    className=\"product-card\"\r\n                  >\r\n                    <h3>{getProductName(product)}</h3>\r\n                    <img\r\n                      src={\r\n                        product.images && product.images.length > 0\r\n                          ? product.images[0]\r\n                          : '/img/placeholder.webp'\r\n                      }\r\n                      alt={product.name}\r\n                      onError={(e) => (e.target.src = '/img/placeholder.webp')}\r\n                    />\r\n                    <p className=\"price\">{getMinPrice(product.store_prices)} грн</p>\r\n                    <p>{product.description || 'Опис відсутній'}</p>\r\n                  </Link>\r\n                ))\r\n            ) : (\r\n              !isLoading && <p>Товари не знайдено</p>\r\n            )}\r\n          </div>\r\n          {/* Пагінація та кнопка \"Завантажити ще\" */}\r\n          {!isLoading && totalProducts > productsPerPage && (\r\n            <div className=\"pagination-container\">\r\n              {((startPage - 1 + loadMorePages) * productsPerPage) < totalProducts && (\r\n                <button className=\"load-more-btn\" onClick={handleLoadMore}>\r\n                  Завантажити ще\r\n                </button>\r\n              )}\r\n              <div className=\"pagination\">\r\n                <button\r\n                  className=\"pagination-btn\"\r\n                  onClick={() => handlePageChange(currentPage - 1)}\r\n                  disabled={currentPage === 1}\r\n                >\r\n                  Попередня\r\n                </button>\r\n                {pageNumbers.map((number) => (\r\n                  <button\r\n                    key={number}\r\n                    className={`pagination-btn ${\r\n                      currentPage === number ? 'active' : ''\r\n                    }`}\r\n                    onClick={() => handlePageChange(number)}\r\n                  >\r\n                    {number}\r\n                  </button>\r\n                ))}\r\n                <button\r\n                  className=\"pagination-btn\"\r\n                  onClick={() => handlePageChange(currentPage + 1)}\r\n                  disabled={currentPage === totalPages}\r\n                >\r\n                  Наступна\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}